
分配公共符号
公共符号            大小              文件

idt_ptr             0x6               kernel/global.o
task_stack          0x28000           kernel/global.o
k_reenter           0x4               kernel/global.o
gdt                 0x400             kernel/global.o
tty_table           0x1830            kernel/global.o
tss                 0x68              kernel/global.o
nr_current_console  0x4               kernel/global.o
disp_pos            0x4               kernel/global.o
gdt_ptr             0x6               kernel/global.o
idt                 0x800             kernel/global.o
ticks               0x4               kernel/global.o
console_table       0xc30             kernel/global.o
irq_table           0x40              kernel/global.o
p_proc_ready        0x4               kernel/global.o
proc_table          0x390             kernel/global.o

舍弃的输入节

 .group         0x0000000000000000        0x8 kernel/start.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/start.o
 .group         0x0000000000000000        0x8 kernel/main.o
 .group         0x0000000000000000        0x8 kernel/main.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/main.o
 .group         0x0000000000000000        0x8 kernel/clock.o
 .group         0x0000000000000000        0x8 kernel/clock.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/clock.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/clock.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/clock.o
 .group         0x0000000000000000        0x8 kernel/keyboard.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/keyboard.o
 .group         0x0000000000000000        0x8 kernel/tty.o
 .group         0x0000000000000000        0x8 kernel/tty.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/tty.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/tty.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/tty.o
 .group         0x0000000000000000        0x8 kernel/console.o
 .group         0x0000000000000000        0x8 kernel/console.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/console.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/console.o
 .group         0x0000000000000000        0x8 kernel/i8259.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/i8259.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/i8259.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/global.o
 .group         0x0000000000000000        0x8 kernel/protect.o
 .group         0x0000000000000000        0x8 kernel/protect.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/protect.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/protect.o
 .group         0x0000000000000000        0x8 kernel/proc.o
 .group         0x0000000000000000        0x8 kernel/proc.o
 .group         0x0000000000000000        0x8 kernel/proc.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/proc.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/proc.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/proc.o
 .group         0x0000000000000000        0x8 kernel/systask.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/systask.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/systask.o
 .group         0x0000000000000000        0x8 kernel/shell.o
 .group         0x0000000000000000        0x8 kernel/shell.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/shell.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/shell.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/shell.o
 .group         0x0000000000000000        0x8 kernel/printf.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/printf.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/printf.o
 .group         0x0000000000000000        0x8 kernel/vsprintf.o
 .group         0x0000000000000000        0x8 kernel/vsprintf.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/vsprintf.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/vsprintf.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/vsprintf.o
 .group         0x0000000000000000        0x8 lib/klib.o
 .group         0x0000000000000000        0x8 lib/klib.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 lib/klib.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 lib/klib.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/klib.o
 .group         0x0000000000000000        0x8 lib/misc.o
 .group         0x0000000000000000        0x8 lib/misc.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 lib/misc.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 lib/misc.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/misc.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0x30400
LOAD kernel/kernel.o
LOAD kernel/syscall.o
LOAD kernel/start.o
LOAD kernel/main.o
LOAD kernel/clock.o
LOAD kernel/keyboard.o
LOAD kernel/tty.o
LOAD kernel/console.o
LOAD kernel/i8259.o
LOAD kernel/global.o
LOAD kernel/protect.o
LOAD kernel/proc.o
LOAD kernel/systask.o
LOAD kernel/shell.o
LOAD kernel/printf.o
LOAD kernel/vsprintf.o
LOAD lib/kliba.o
LOAD lib/klib.o
LOAD lib/string.o
LOAD lib/misc.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel/kernel.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel/kernel.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x0000000000030400     0x4e9b
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000030400      0x317 kernel/kernel.o
                0x0000000000030400                _start
                0x0000000000030440                hwint00
                0x0000000000030470                hwint01
                0x00000000000304a0                hwint02
                0x00000000000304d0                hwint03
                0x0000000000030500                hwint04
                0x0000000000030530                hwint05
                0x0000000000030560                hwint06
                0x0000000000030590                hwint07
                0x00000000000305c0                hwint08
                0x00000000000305d0                hwint09
                0x00000000000305e0                hwint10
                0x00000000000305f0                hwint11
                0x0000000000030600                hwint12
                0x0000000000030610                hwint13
                0x0000000000030620                hwint14
                0x0000000000030630                hwint15
                0x000000000003063b                divide_error
                0x0000000000030641                single_step_exception
                0x0000000000030647                nmi
                0x000000000003064d                breakpoint_exception
                0x0000000000030653                overflow
                0x0000000000030659                bounds_check
                0x000000000003065f                inval_opcode
                0x0000000000030665                copr_not_available
                0x000000000003066b                double_fault
                0x000000000003066f                copr_seg_overrun
                0x0000000000030675                inval_tss
                0x0000000000030679                segment_not_present
                0x000000000003067d                stack_exception
                0x0000000000030681                general_protection
                0x0000000000030685                page_fault
                0x0000000000030689                copr_error
                0x00000000000306d2                sys_call
                0x00000000000306f2                restart
 *fill*         0x0000000000030717        0x9 
 .text          0x0000000000030720       0x20 kernel/syscall.o
                0x0000000000030720                sendrec
                0x0000000000030734                printx
 .text          0x0000000000030740       0xc3 kernel/start.o
                0x0000000000030740                cstart
 .text.__x86.get_pc_thunk.bx
                0x0000000000030803        0x4 kernel/start.o
                0x0000000000030803                __x86.get_pc_thunk.bx
 .text          0x0000000000030807      0x426 kernel/main.o
                0x0000000000030807                kernel_main
                0x0000000000030ad0                get_ticks
                0x0000000000030b13                TestA
                0x0000000000030b81                TestB
                0x0000000000030bac                TestC
                0x0000000000030bd3                panic
 .text.__x86.get_pc_thunk.ax
                0x0000000000030c2d        0x4 kernel/main.o
                0x0000000000030c2d                __x86.get_pc_thunk.ax
 .text          0x0000000000030c31      0x116 kernel/clock.o
                0x0000000000030c31                clock_handler
                0x0000000000030c94                milli_delay
                0x0000000000030cde                init_clock
 .text          0x0000000000030d47      0x749 kernel/keyboard.o
                0x0000000000030d47                keyboard_handler
                0x0000000000030dc0                init_keyboard
                0x0000000000030e80                keyboard_read
 .text          0x0000000000031490      0x721 kernel/tty.o
                0x0000000000031490                testDel
                0x00000000000314d2                task_tty
                0x00000000000315f7                in_process
                0x0000000000031982                tty_write
                0x00000000000319d7                sys_printx
 .text          0x0000000000031bb1      0x570 kernel/console.o
                0x0000000000031bb1                init_screen
                0x0000000000031d0c                is_current_console
                0x0000000000031d3a                out_char
                0x0000000000031ff7                select_console
                0x0000000000032040                scroll_screen
                0x00000000000320b5                clear_init_screen
                0x00000000000320eb                clear_screen
 .text          0x0000000000032121      0x167 kernel/i8259.o
                0x0000000000032121                init_8259A
                0x0000000000032209                spurious_irq
                0x0000000000032253                put_irq_handler
 .text          0x0000000000032288        0x0 kernel/global.o
 .text          0x0000000000032288      0x6c7 kernel/protect.o
                0x0000000000032288                init_prot
                0x0000000000032725                seg2phys
                0x00000000000327f8                exception_handler
 .text          0x000000000003294f     0x1906 kernel/proc.o
                0x000000000003294f                schedule
                0x0000000000032a03                sys_sendrec
                0x0000000000032b4a                send_recv
                0x0000000000032c1c                ldt_seg_linear
                0x0000000000032c70                va2la
                0x0000000000032ce9                reset_msg
                0x0000000000033cba                dump_proc
                0x0000000000034096                dump_msg
                0x00000000000341c7                strcmp
 .text.__x86.get_pc_thunk.dx
                0x0000000000034255        0x4 kernel/proc.o
                0x0000000000034255                __x86.get_pc_thunk.dx
 .text          0x0000000000034259       0x69 kernel/systask.o
                0x0000000000034259                task_sys
 .text          0x00000000000342c2      0x895 kernel/shell.o
                0x00000000000342c2                print_welcome
                0x0000000000034377                divideOrder
                0x0000000000034a13                task_shell
 .text          0x0000000000034b57       0x5f kernel/printf.o
                0x0000000000034b57                printf
 .text          0x0000000000034bb6      0x330 kernel/vsprintf.o
                0x0000000000034c26                vsprintf
                0x0000000000034eb6                sprintf
 *fill*         0x0000000000034ee6        0xa 
 .text          0x0000000000034ef0       0xf3 lib/kliba.o
                0x0000000000034ef0                disp_str
                0x0000000000034f36                disp_color_str
                0x0000000000034f75                out_byte
                0x0000000000034f81                in_byte
                0x0000000000034f8b                disable_irq
                0x0000000000034fc0                enable_irq
                0x0000000000034fdf                disable_int
                0x0000000000034fe1                enable_int
 .text          0x0000000000034fe3      0x13c lib/klib.o
                0x0000000000034fe3                itoa
                0x0000000000035098                disp_int
                0x00000000000350ce                delay
 *fill*         0x000000000003511f        0x1 
 .text          0x0000000000035120       0xdb lib/string.o
                0x0000000000035120                memcpy
                0x0000000000035149                memset
                0x000000000003516a                strcpy
                0x0000000000035182                strcatch
                0x00000000000351a6                strcat
                0x00000000000351ca                strdel
                0x00000000000351e5                strlen
 .text          0x00000000000351fb       0xa0 lib/misc.o
                0x00000000000351fb                spin
                0x0000000000035225                spinProc
                0x000000000003524f                assertion_failure
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000000352a0     0x1001
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000000352a0       0x47 kernel/start.o
 *fill*         0x00000000000352e7        0x1 
 .rodata        0x00000000000352e8       0x41 kernel/main.o
 *fill*         0x0000000000035329        0x3 
 .rodata        0x000000000003532c       0x64 kernel/keyboard.o
 .rodata        0x0000000000035390       0x94 kernel/tty.o
 .rodata        0x0000000000035424       0x11 kernel/i8259.o
 *fill*         0x0000000000035435        0xb 
 .rodata        0x0000000000035440      0x540 kernel/protect.o
 .rodata        0x0000000000035980      0x5fe kernel/proc.o
 .rodata        0x0000000000035f7e       0x11 kernel/systask.o
 *fill*         0x0000000000035f8f        0x1 
 .rodata        0x0000000000035f90      0x294 kernel/shell.o
 .rodata        0x0000000000036224       0x7d lib/misc.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000000362a4      0xabc
 *(.eh_frame)
 .eh_frame      0x00000000000362a4       0x50 kernel/start.o
 .eh_frame      0x00000000000362f4       0xdc kernel/main.o
                                        0x108 (松开之前的大小)
 .eh_frame      0x00000000000363d0       0x6c kernel/clock.o
                                         0xac (松开之前的大小)
 .eh_frame      0x000000000003643c       0xfc kernel/keyboard.o
                                        0x128 (松开之前的大小)
 .eh_frame      0x0000000000036538      0x138 kernel/tty.o
                                        0x178 (松开之前的大小)
 .eh_frame      0x0000000000036670      0x150 kernel/console.o
                                        0x190 (松开之前的大小)
 .eh_frame      0x00000000000367c0       0x6c kernel/i8259.o
                                         0x98 (松开之前的大小)
 .eh_frame      0x000000000003682c       0xb8 kernel/protect.o
                                         0xf8 (松开之前的大小)
 .eh_frame      0x00000000000368e4      0x220 kernel/proc.o
                                        0x260 (松开之前的大小)
 .eh_frame      0x0000000000036b04       0x1c kernel/systask.o
                                         0x48 (松开之前的大小)
 .eh_frame      0x0000000000036b20       0xf4 kernel/shell.o
                                        0x134 (松开之前的大小)
 .eh_frame      0x0000000000036c14       0x24 kernel/printf.o
                                         0x50 (松开之前的大小)
 .eh_frame      0x0000000000036c38       0x68 kernel/vsprintf.o
                                         0xa8 (松开之前的大小)
 .eh_frame      0x0000000000036ca0       0x64 lib/klib.o
                                         0xa4 (松开之前的大小)
 .eh_frame      0x0000000000036d04       0x5c lib/misc.o
                                         0x9c (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000038000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000038000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x0000000000038000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x0000000000038000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x0000000000038000        0x0
 *(.got)
 .got           0x0000000000038000        0x0 kernel/kernel.o
 *(.igot)
                0x0000000000038ff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000038000        0xc
 *(.got.plt)
 .got.plt       0x0000000000038000        0xc kernel/kernel.o
                0x0000000000038000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)
 .igot.plt      0x000000000003800c        0x0 kernel/kernel.o

.data           0x0000000000038020      0x724
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000038020        0x2 kernel/kernel.o
 .data          0x0000000000038022        0x0 kernel/start.o
 .data          0x0000000000038022        0x0 kernel/main.o
 .data          0x0000000000038022        0x0 kernel/clock.o
 *fill*         0x0000000000038022       0x1e 
 .data          0x0000000000038040      0x600 kernel/keyboard.o
                0x0000000000038040                keymap
 .data          0x0000000000038640        0x0 kernel/tty.o
 .data          0x0000000000038640        0x0 kernel/console.o
 .data          0x0000000000038640        0x0 kernel/i8259.o
 .data          0x0000000000038640        0x0 kernel/global.o
 .data.rel      0x0000000000038640      0x104 kernel/global.o
                0x0000000000038640                task_table
                0x00000000000386c0                user_proc_table
                0x0000000000038738                sys_call_table
 .data          0x0000000000038744        0x0 kernel/protect.o
 .data          0x0000000000038744        0x0 kernel/proc.o
 .data          0x0000000000038744        0x0 kernel/systask.o
 .data          0x0000000000038744        0x0 kernel/shell.o
 .data          0x0000000000038744        0x0 kernel/printf.o
 .data          0x0000000000038744        0x0 kernel/vsprintf.o
 .data          0x0000000000038744        0x0 lib/klib.o
 .data          0x0000000000038744        0x0 lib/misc.o

.data1
 *(.data1)
                0x0000000000038744                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x0000000000038744                . = .
                0x0000000000038744                __bss_start = .

.bss            0x0000000000038760    0x2bdb0
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000038760      0x800 kernel/kernel.o
 .bss           0x0000000000038f60        0x0 kernel/start.o
 .bss           0x0000000000038f60        0x0 kernel/main.o
 .bss           0x0000000000038f60        0x0 kernel/clock.o
 .bss           0x0000000000038f60       0x58 kernel/keyboard.o
 .bss           0x0000000000038fb8        0x0 kernel/tty.o
 .bss           0x0000000000038fb8        0x0 kernel/console.o
 .bss           0x0000000000038fb8        0x0 kernel/i8259.o
 .bss           0x0000000000038fb8        0x0 kernel/global.o
 .bss           0x0000000000038fb8        0x0 kernel/protect.o
 .bss           0x0000000000038fb8        0x0 kernel/proc.o
 .bss           0x0000000000038fb8        0x0 kernel/systask.o
 .bss           0x0000000000038fb8        0x0 kernel/shell.o
 .bss           0x0000000000038fb8        0x0 kernel/printf.o
 .bss           0x0000000000038fb8        0x0 kernel/vsprintf.o
 .bss           0x0000000000038fb8        0x0 lib/klib.o
 .bss           0x0000000000038fb8        0x0 lib/misc.o
 *(COMMON)
 *fill*         0x0000000000038fb8        0x8 
 COMMON         0x0000000000038fc0    0x2b550 kernel/global.o
                0x0000000000038fc0                idt_ptr
                0x0000000000038fe0                task_stack
                0x0000000000060fe0                k_reenter
                0x0000000000061000                gdt
                0x0000000000061400                tty_table
                0x0000000000062c40                tss
                0x0000000000062ca8                nr_current_console
                0x0000000000062cac                disp_pos
                0x0000000000062cb0                gdt_ptr
                0x0000000000062cc0                idt
                0x00000000000634c0                ticks
                0x00000000000634e0                console_table
                0x0000000000064120                irq_table
                0x0000000000064160                p_proc_ready
                0x0000000000064180                proc_table
                0x0000000000064510                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000064510                . = ALIGN (0x4)
                0x0000000000064510                . = SEGMENT_START ("ldata-segment", .)
                0x0000000000064510                . = ALIGN (0x4)
                0x0000000000064510                _end = .
                [!provide]                        PROVIDE (end = .)
                0x0000000000064510                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x24
 *(.comment)
 .comment       0x0000000000000000       0x24 kernel/start.o
                                         0x25 (松开之前的大小)
 .comment       0x0000000000000024       0x25 kernel/main.o
 .comment       0x0000000000000024       0x25 kernel/clock.o
 .comment       0x0000000000000024       0x25 kernel/keyboard.o
 .comment       0x0000000000000024       0x25 kernel/tty.o
 .comment       0x0000000000000024       0x25 kernel/console.o
 .comment       0x0000000000000024       0x25 kernel/i8259.o
 .comment       0x0000000000000024       0x25 kernel/global.o
 .comment       0x0000000000000024       0x25 kernel/protect.o
 .comment       0x0000000000000024       0x25 kernel/proc.o
 .comment       0x0000000000000024       0x25 kernel/systask.o
 .comment       0x0000000000000024       0x25 kernel/shell.o
 .comment       0x0000000000000024       0x25 kernel/printf.o
 .comment       0x0000000000000024       0x25 kernel/vsprintf.o
 .comment       0x0000000000000024       0x25 lib/klib.o
 .comment       0x0000000000000024       0x25 lib/misc.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
