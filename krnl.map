
分配公共符号
公共符号            大小              文件

idt_ptr             0x6               kernel/global.o
task_stack          0x38000           kernel/global.o
k_reenter           0x4               kernel/global.o
gdt                 0x400             kernel/global.o
tty_table           0x1830            kernel/global.o
tss                 0x68              kernel/global.o
nr_current_console  0x4               kernel/global.o
disp_pos            0x4               kernel/global.o
gdt_ptr             0x6               kernel/global.o
idt                 0x800             kernel/global.o
ticks               0x4               kernel/global.o
console_table       0x30              kernel/global.o
irq_table           0x40              kernel/global.o
p_proc_ready        0x4               kernel/global.o
proc_table          0x428             kernel/global.o

舍弃的输入节

 .group         0x0000000000000000        0x8 kernel/start.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/start.o
 .group         0x0000000000000000        0x8 kernel/main.o
 .group         0x0000000000000000        0x8 kernel/main.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/main.o
 .group         0x0000000000000000        0x8 kernel/clock.o
 .group         0x0000000000000000        0x8 kernel/clock.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/clock.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/clock.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/clock.o
 .group         0x0000000000000000        0x8 kernel/keyboard.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/keyboard.o
 .group         0x0000000000000000        0x8 kernel/tty.o
 .group         0x0000000000000000        0x8 kernel/tty.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/tty.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/tty.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/tty.o
 .group         0x0000000000000000        0x8 kernel/console.o
 .group         0x0000000000000000        0x8 kernel/console.o
 .group         0x0000000000000000        0x8 kernel/console.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/console.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/console.o
 .group         0x0000000000000000        0x8 kernel/i8259.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/i8259.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/i8259.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/global.o
 .group         0x0000000000000000        0x8 kernel/protect.o
 .group         0x0000000000000000        0x8 kernel/protect.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/protect.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/protect.o
 .group         0x0000000000000000        0x8 kernel/proc.o
 .group         0x0000000000000000        0x8 kernel/proc.o
 .group         0x0000000000000000        0x8 kernel/proc.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/proc.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/proc.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/proc.o
 .group         0x0000000000000000        0x8 kernel/systask.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/systask.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/systask.o
 .group         0x0000000000000000        0x8 kernel/shell.o
 .group         0x0000000000000000        0x8 kernel/shell.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/shell.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/shell.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/shell.o
 .group         0x0000000000000000        0x8 kernel/game.o
 .group         0x0000000000000000        0x8 kernel/game.o
 .group         0x0000000000000000        0x8 kernel/game.o
 .group         0x0000000000000000        0x8 kernel/game.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/game.o
 .text.__x86.get_pc_thunk.dx
                0x0000000000000000        0x4 kernel/game.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/game.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/game.o
 .group         0x0000000000000000        0x8 kernel/printf.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/printf.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/printf.o
 .group         0x0000000000000000        0x8 kernel/vsprintf.o
 .group         0x0000000000000000        0x8 kernel/vsprintf.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/vsprintf.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/vsprintf.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/vsprintf.o
 .group         0x0000000000000000        0x8 lib/klib.o
 .group         0x0000000000000000        0x8 lib/klib.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 lib/klib.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 lib/klib.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/klib.o
 .group         0x0000000000000000        0x8 lib/misc.o
 .group         0x0000000000000000        0x8 lib/misc.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 lib/misc.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 lib/misc.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/misc.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0x30400
LOAD kernel/kernel.o
LOAD kernel/syscall.o
LOAD kernel/start.o
LOAD kernel/main.o
LOAD kernel/clock.o
LOAD kernel/keyboard.o
LOAD kernel/tty.o
LOAD kernel/console.o
LOAD kernel/i8259.o
LOAD kernel/global.o
LOAD kernel/protect.o
LOAD kernel/proc.o
LOAD kernel/systask.o
LOAD kernel/shell.o
LOAD kernel/game.o
LOAD kernel/printf.o
LOAD kernel/vsprintf.o
LOAD lib/kliba.o
LOAD lib/klib.o
LOAD lib/string.o
LOAD lib/misc.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel/kernel.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel/kernel.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x0000000000030400     0x623b
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000030400      0x317 kernel/kernel.o
                0x0000000000030400                _start
                0x0000000000030440                hwint00
                0x0000000000030470                hwint01
                0x00000000000304a0                hwint02
                0x00000000000304d0                hwint03
                0x0000000000030500                hwint04
                0x0000000000030530                hwint05
                0x0000000000030560                hwint06
                0x0000000000030590                hwint07
                0x00000000000305c0                hwint08
                0x00000000000305d0                hwint09
                0x00000000000305e0                hwint10
                0x00000000000305f0                hwint11
                0x0000000000030600                hwint12
                0x0000000000030610                hwint13
                0x0000000000030620                hwint14
                0x0000000000030630                hwint15
                0x000000000003063b                divide_error
                0x0000000000030641                single_step_exception
                0x0000000000030647                nmi
                0x000000000003064d                breakpoint_exception
                0x0000000000030653                overflow
                0x0000000000030659                bounds_check
                0x000000000003065f                inval_opcode
                0x0000000000030665                copr_not_available
                0x000000000003066b                double_fault
                0x000000000003066f                copr_seg_overrun
                0x0000000000030675                inval_tss
                0x0000000000030679                segment_not_present
                0x000000000003067d                stack_exception
                0x0000000000030681                general_protection
                0x0000000000030685                page_fault
                0x0000000000030689                copr_error
                0x00000000000306d2                sys_call
                0x00000000000306f2                restart
 *fill*         0x0000000000030717        0x9 
 .text          0x0000000000030720       0x20 kernel/syscall.o
                0x0000000000030720                sendrec
                0x0000000000030734                printx
 .text          0x0000000000030740       0xc3 kernel/start.o
                0x0000000000030740                cstart
 .text.__x86.get_pc_thunk.bx
                0x0000000000030803        0x4 kernel/start.o
                0x0000000000030803                __x86.get_pc_thunk.bx
 .text          0x0000000000030807      0x4a2 kernel/main.o
                0x0000000000030807                kernel_main
                0x0000000000030ae3                get_ticks
                0x0000000000030b26                TestA
                0x0000000000030ba6                TestB
                0x0000000000030bd1                TestC
                0x0000000000030c4f                panic
 .text.__x86.get_pc_thunk.ax
                0x0000000000030ca9        0x4 kernel/main.o
                0x0000000000030ca9                __x86.get_pc_thunk.ax
 .text          0x0000000000030cad      0x116 kernel/clock.o
                0x0000000000030cad                clock_handler
                0x0000000000030d10                milli_delay
                0x0000000000030d5a                init_clock
 .text          0x0000000000030dc3      0x749 kernel/keyboard.o
                0x0000000000030dc3                keyboard_handler
                0x0000000000030e3c                init_keyboard
                0x0000000000030efc                keyboard_read
 .text          0x000000000003150c      0x740 kernel/tty.o
                0x000000000003150c                testDel
                0x0000000000031547                task_tty
                0x000000000003166b                clear_screen
                0x00000000000316a2                in_process
                0x0000000000031a1d                tty_write
                0x0000000000031a72                sys_printx
 .text          0x0000000000031c4c      0x5cf kernel/console.o
                0x0000000000031c4c                init_screen
                0x0000000000031d87                is_current_console
                0x0000000000031db2                out_char
                0x0000000000031efb                out_color_char
                0x0000000000031f9f                print_color_str
                0x000000000003212a                select_console
                0x0000000000032170                scroll_screen
                0x00000000000321e5                clear_init_screen
 .text.__x86.get_pc_thunk.cx
                0x000000000003221b        0x4 kernel/console.o
                0x000000000003221b                __x86.get_pc_thunk.cx
 .text          0x000000000003221f      0x167 kernel/i8259.o
                0x000000000003221f                init_8259A
                0x0000000000032307                spurious_irq
                0x0000000000032351                put_irq_handler
 .text          0x0000000000032386        0x0 kernel/global.o
 .text          0x0000000000032386      0x6c7 kernel/protect.o
                0x0000000000032386                init_prot
                0x0000000000032823                seg2phys
                0x00000000000328f6                exception_handler
 .text          0x0000000000032a4d     0x1906 kernel/proc.o
                0x0000000000032a4d                schedule
                0x0000000000032b01                sys_sendrec
                0x0000000000032c48                send_recv
                0x0000000000032d1a                ldt_seg_linear
                0x0000000000032d6e                va2la
                0x0000000000032de7                reset_msg
                0x0000000000033db8                dump_proc
                0x0000000000034194                dump_msg
                0x00000000000342c5                strcmp
 .text.__x86.get_pc_thunk.dx
                0x0000000000034353        0x4 kernel/proc.o
                0x0000000000034353                __x86.get_pc_thunk.dx
 .text          0x0000000000034357       0x69 kernel/systask.o
                0x0000000000034357                task_sys
 .text          0x00000000000343c0      0xed8 kernel/shell.o
                0x00000000000343c0                print_welcome
                0x00000000000350b8                task_shell
 .text          0x0000000000035298      0xc0f kernel/game.o
                0x0000000000035298                doRand
                0x0000000000035d5b                G2048
 .text.__x86.get_pc_thunk.si
                0x0000000000035ea7        0x4 kernel/game.o
                0x0000000000035ea7                __x86.get_pc_thunk.si
 .text          0x0000000000035eab       0x5f kernel/printf.o
                0x0000000000035eab                printf
 .text          0x0000000000035f0a      0x330 kernel/vsprintf.o
                0x0000000000035f7a                vsprintf
                0x000000000003620a                sprintf
 *fill*         0x000000000003623a        0x6 
 .text          0x0000000000036240      0x141 lib/kliba.o
                0x0000000000036240                disp_str
                0x0000000000036286                disp_color_str
                0x00000000000362c5                out_byte
                0x00000000000362d1                in_byte
                0x00000000000362db                disable_irq
                0x0000000000036310                enable_irq
                0x000000000003632f                disable_int
                0x0000000000036331                enable_int
                0x0000000000036333                generate_music
 .text          0x0000000000036381      0x13c lib/klib.o
                0x0000000000036381                itoa
                0x0000000000036436                disp_int
                0x000000000003646c                delay
 *fill*         0x00000000000364bd        0x3 
 .text          0x00000000000364c0       0xdb lib/string.o
                0x00000000000364c0                memcpy
                0x00000000000364e9                memset
                0x000000000003650a                strcpy
                0x0000000000036522                strcatch
                0x0000000000036546                strcat
                0x000000000003656a                strdel
                0x0000000000036585                strlen
 .text          0x000000000003659b       0xa0 lib/misc.o
                0x000000000003659b                spin
                0x00000000000365c5                spinProc
                0x00000000000365ef                assertion_failure
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x0000000000036640     0x1219
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000036640       0x47 kernel/start.o
 *fill*         0x0000000000036687        0x1 
 .rodata        0x0000000000036688       0x56 kernel/main.o
 *fill*         0x00000000000366de        0x2 
 .rodata        0x00000000000366e0       0x64 kernel/keyboard.o
 .rodata        0x0000000000036744       0x94 kernel/tty.o
 .rodata        0x00000000000367d8       0x11 kernel/i8259.o
 *fill*         0x00000000000367e9       0x17 
 .rodata        0x0000000000036800      0x540 kernel/protect.o
 .rodata        0x0000000000036d40      0x5fe kernel/proc.o
 .rodata        0x000000000003733e       0x11 kernel/systask.o
 *fill*         0x000000000003734f        0x1 
 .rodata        0x0000000000037350      0x3f4 kernel/shell.o
 .rodata        0x0000000000037744       0x98 kernel/game.o
 .rodata        0x00000000000377dc       0x7d lib/misc.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x000000000003785c      0xc18
 *(.eh_frame)
 .eh_frame      0x000000000003785c       0x50 kernel/start.o
 .eh_frame      0x00000000000378ac       0xdc kernel/main.o
                                        0x108 (松开之前的大小)
 .eh_frame      0x0000000000037988       0x6c kernel/clock.o
                                         0xac (松开之前的大小)
 .eh_frame      0x00000000000379f4       0xfc kernel/keyboard.o
                                        0x128 (松开之前的大小)
 .eh_frame      0x0000000000037af0      0x15c kernel/tty.o
                                        0x19c (松开之前的大小)
 .eh_frame      0x0000000000037c4c      0x184 kernel/console.o
                                        0x1c4 (松开之前的大小)
 .eh_frame      0x0000000000037dd0       0x6c kernel/i8259.o
                                         0x98 (松开之前的大小)
 .eh_frame      0x0000000000037e3c       0xb8 kernel/protect.o
                                         0xf8 (松开之前的大小)
 .eh_frame      0x0000000000037ef4      0x220 kernel/proc.o
                                        0x260 (松开之前的大小)
 .eh_frame      0x0000000000038114       0x1c kernel/systask.o
                                         0x48 (松开之前的大小)
 .eh_frame      0x0000000000038130      0x11c kernel/shell.o
                                        0x15c (松开之前的大小)
 .eh_frame      0x000000000003824c       0xdc kernel/game.o
                                        0x130 (松开之前的大小)
 .eh_frame      0x0000000000038328       0x24 kernel/printf.o
                                         0x50 (松开之前的大小)
 .eh_frame      0x000000000003834c       0x68 kernel/vsprintf.o
                                         0xa8 (松开之前的大小)
 .eh_frame      0x00000000000383b4       0x64 lib/klib.o
                                         0xa4 (松开之前的大小)
 .eh_frame      0x0000000000038418       0x5c lib/misc.o
                                         0x9c (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x000000000003a000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x000000000003a000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x000000000003a000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x000000000003a000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x000000000003a000        0x0
 *(.got)
 .got           0x000000000003a000        0x0 kernel/kernel.o
 *(.igot)
                0x000000000003aff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x000000000003a000        0xc
 *(.got.plt)
 .got.plt       0x000000000003a000        0xc kernel/kernel.o
                0x000000000003a000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)
 .igot.plt      0x000000000003a00c        0x0 kernel/kernel.o

.data           0x000000000003a020      0x744
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x000000000003a020        0x2 kernel/kernel.o
 .data          0x000000000003a022        0x0 kernel/start.o
 .data          0x000000000003a022        0x0 kernel/main.o
 .data          0x000000000003a022        0x0 kernel/clock.o
 *fill*         0x000000000003a022       0x1e 
 .data          0x000000000003a040      0x600 kernel/keyboard.o
                0x000000000003a040                keymap
 .data          0x000000000003a640        0x0 kernel/tty.o
 .data          0x000000000003a640        0x0 kernel/console.o
 .data          0x000000000003a640        0x0 kernel/i8259.o
 .data          0x000000000003a640        0x0 kernel/global.o
 .data.rel      0x000000000003a640      0x124 kernel/global.o
                0x000000000003a640                task_table
                0x000000000003a6e0                user_proc_table
                0x000000000003a758                sys_call_table
 .data          0x000000000003a764        0x0 kernel/protect.o
 .data          0x000000000003a764        0x0 kernel/proc.o
 .data          0x000000000003a764        0x0 kernel/systask.o
 .data          0x000000000003a764        0x0 kernel/shell.o
 .data          0x000000000003a764        0x0 kernel/game.o
 .data          0x000000000003a764        0x0 kernel/printf.o
 .data          0x000000000003a764        0x0 kernel/vsprintf.o
 .data          0x000000000003a764        0x0 lib/klib.o
 .data          0x000000000003a764        0x0 lib/misc.o

.data1
 *(.data1)
                0x000000000003a764                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x000000000003a764                . = .
                0x000000000003a764                __bss_start = .

.bss            0x000000000003a780    0x3b248
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x000000000003a780      0x800 kernel/kernel.o
 .bss           0x000000000003af80        0x0 kernel/start.o
 .bss           0x000000000003af80        0x0 kernel/main.o
 .bss           0x000000000003af80        0x0 kernel/clock.o
 .bss           0x000000000003af80       0x58 kernel/keyboard.o
 .bss           0x000000000003afd8        0x0 kernel/tty.o
 .bss           0x000000000003afd8        0x0 kernel/console.o
 .bss           0x000000000003afd8        0x0 kernel/i8259.o
 .bss           0x000000000003afd8        0x0 kernel/global.o
 .bss           0x000000000003afd8        0x0 kernel/protect.o
 .bss           0x000000000003afd8        0x0 kernel/proc.o
 .bss           0x000000000003afd8        0x0 kernel/systask.o
 .bss           0x000000000003afd8        0x0 kernel/shell.o
 .bss           0x000000000003afd8        0x0 kernel/game.o
 .bss           0x000000000003afd8        0x0 kernel/printf.o
 .bss           0x000000000003afd8        0x0 kernel/vsprintf.o
 .bss           0x000000000003afd8        0x0 lib/klib.o
 .bss           0x000000000003afd8        0x0 lib/misc.o
 *(COMMON)
 *fill*         0x000000000003afd8        0x8 
 COMMON         0x000000000003afe0    0x3a9e8 kernel/global.o
                0x000000000003afe0                idt_ptr
                0x000000000003b000                task_stack
                0x0000000000073000                k_reenter
                0x0000000000073020                gdt
                0x0000000000073420                tty_table
                0x0000000000074c60                tss
                0x0000000000074cc8                nr_current_console
                0x0000000000074ccc                disp_pos
                0x0000000000074cd0                gdt_ptr
                0x0000000000074ce0                idt
                0x00000000000754e0                ticks
                0x0000000000075500                console_table
                0x0000000000075540                irq_table
                0x0000000000075580                p_proc_ready
                0x00000000000755a0                proc_table
                0x00000000000759c8                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000000759c8                . = ALIGN (0x4)
                0x00000000000759c8                . = SEGMENT_START ("ldata-segment", .)
                0x00000000000759c8                . = ALIGN (0x4)
                0x00000000000759c8                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000000759c8                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x24
 *(.comment)
 .comment       0x0000000000000000       0x24 kernel/start.o
                                         0x25 (松开之前的大小)
 .comment       0x0000000000000024       0x25 kernel/main.o
 .comment       0x0000000000000024       0x25 kernel/clock.o
 .comment       0x0000000000000024       0x25 kernel/keyboard.o
 .comment       0x0000000000000024       0x25 kernel/tty.o
 .comment       0x0000000000000024       0x25 kernel/console.o
 .comment       0x0000000000000024       0x25 kernel/i8259.o
 .comment       0x0000000000000024       0x25 kernel/global.o
 .comment       0x0000000000000024       0x25 kernel/protect.o
 .comment       0x0000000000000024       0x25 kernel/proc.o
 .comment       0x0000000000000024       0x25 kernel/systask.o
 .comment       0x0000000000000024       0x25 kernel/shell.o
 .comment       0x0000000000000024       0x25 kernel/game.o
 .comment       0x0000000000000024       0x25 kernel/printf.o
 .comment       0x0000000000000024       0x25 kernel/vsprintf.o
 .comment       0x0000000000000024       0x25 lib/klib.o
 .comment       0x0000000000000024       0x25 lib/misc.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
